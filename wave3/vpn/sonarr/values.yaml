---
controllers:
  sonarr:
    annotations:
      reloader.stakater.com/auto: "true"
    containers:
      app:
        image:
          repository: ghcr.io/home-operations/sonarr
          tag: 4.0.15.2940@sha256:ca6c735014bdfb04ce043bf1323a068ab1d1228eea5bab8305ca0722df7baf78
        env:
          SONARR__APP__INSTANCENAME: "{{ .Release.Name }}"
          SONARR__APP__THEME: dark
          SONARR__AUTH__METHOD: External
          SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
          SONARR__LOG__DBENABLED: "False"
          SONARR__LOG__LEVEL: info
          SONARR__SERVER__PORT: &port 8989
          SONARR__UPDATE__BRANCH: develop
          TZ: Europe/London
        envFrom:
          - secretRef:
              name: "{{ .Release.Name }}-api-key"
        probes:
          liveness: &probes
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /ping
                port: *port
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3
          readiness: *probes
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities: {drop: ["ALL"]}
        resources:
          requests:
            cpu: 100m
            memory: 324M
          limits:
            memory: 2300M

defaultPodOptions:
  securityContext:
    runAsNonRoot: true
    runAsUser: 3001
    runAsGroup: 513
    fsGroup: 513
    fsGroupChangePolicy: OnRootMismatch

service:
  app:
    forceRename: "{{.Release.Name}}"
    ports:
      http:
        port: *port

ingress:
  app:
    enabled: true
    className: traefik
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
    hosts: &hosts
      - host: "{{.Release.Name}}.{{.Values.global.domain}}"
        paths:
          - path: /
            service:
              identifier: app
              port: http
    tls:
      - hosts:
          - "*.{{.Values.global.domain}}"
  external:
    enabled: true
    className: cloudflare-tunnel
    annotations:
      cloudflare-tunnel-ingress-controller.strrl.dev/backend-protocol: http
    hosts: *hosts

persistence:
  config:
    enabled: true
    forceRename: "{{ .Release.Name }}-config"
    retain: true
    storageClass: openebs-zfspv
    accessMode: ReadWriteOnce
    size: 2G
  config-cache:
    storageClass: openebs-zfspv
    accessMode: ReadWriteOnce
    size: 2G
    globalMounts:
      - path: /config/MediaCover
  data:
    enabled: true
    type: nfs
    server: 10.58.0.12
    path: /srv/media
    globalMounts:
      - path: /data
  tmp:
    type: emptyDir
