---
global:
  # -- Set an override for the prefix of the fullname
  nameOverride: zigbee2mqtt
  # -- Set the entire name definition
  fullnameOverride:
  # -- Set additional global labels. Helm templates can be used.
  labels: {}
  # -- Set additional global annotations. Helm templates can be used.
  annotations: {}

controllers:
  zigbee2mqtt:
    enabled: true
    type: deployment
    annotations:
      reloader.stakater.com/auto: "true"

    pod:
      securityContext:
        runAsUser: 2000
        runAsGroup: 2000
        fsGroup: 2000
        fsGroupChangePolicy: OnRootMismatch

    containers:
      app:
        image:
          repository: ghcr.io/koenkk/zigbee2mqtt
          tag: 2.6.2

        env:
          TZ: "Europe/London"
          ZIGBEE2MQTT_DATA: "/data"
          # yamllint disable-line rule:line-length
          ZIGBEE2MQTT_CONFIG_ADVANCED_HOMEASSISTANT_DISCOVERY_TOPIC: "homeassistant"
          # yamllint disable-line rule:line-length
          ZIGBEE2MQTT_CONFIG_ADVANCED_HOMEASSISTANT_STATUS_TOPIC: "homeassistant/status"
          ZIGBEE2MQTT_CONFIG_ADVANCED_LAST_SEEN: "ISO_8601"
          ZIGBEE2MQTT_CONFIG_ADVANCED_LOG_LEVEL: "info"
          ZIGBEE2MQTT_CONFIG_ADVANCED_LOG_OUTPUT: '["console"]'
          ZIGBEE2MQTT_CONFIG_ADVANCED_NETWORK_KEY: "GENERATE"
          ZIGBEE2MQTT_CONFIG_EXPERIMENTAL_NEW_API: true
          ZIGBEE2MQTT_CONFIG_FRONTEND_PORT: 8080
          # yamllint disable-line rule:line-length
          ZIGBEE2MQTT_CONFIG_FRONTEND_URL: "https://{{.Release.Name}}.{{.Values.global.domain}}"
          ZIGBEE2MQTT_CONFIG_HOMEASSISTANT_ENABLED: true
          ZIGBEE2MQTT_CONFIG_HOMEASSISTANT_DISCOVERY_TOPIC: "homeassistant"
          # ZIGBEE2MQTT_CONFIG_MQTT_BASE_TOPIC: "{{.Release.Name}}"
          ZIGBEE2MQTT_CONFIG_MQTT_INCLUDE_DEVICE_INFORMATION: true
          ZIGBEE2MQTT_CONFIG_MQTT_PASSWORD:
            valueFrom:
              secretKeyRef:
                name: "{{.Release.Name}}-mqtt-credentials"
                key: MQTT_PASSWORD
          ZIGBEE2MQTT_CONFIG_MQTT_SERVER: "mqtt://mosquitto:1883"
          ZIGBEE2MQTT_CONFIG_MQTT_USER:
            valueFrom:
              secretKeyRef:
                name: "{{.Release.Name}}-mqtt-credentials"
                key: MQTT_USER
          ZIGBEE2MQTT_CONFIG_PERMIT_JOIN: false
          ZIGBEE2MQTT_CONFIG_SERIAL_ADAPTER: "ezsp"
          ZIGBEE2MQTT_CONFIG_SERIAL_PORT: "tcp://zigbee1.{{.Values.global.domain}}:8888"

        resources:
          requests:
            cpu: 50m
            memory: 384Mi
          limits:
            memory: 384Mi

        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
            add:
              - NET_BIND_SERVICE
      code-server:
        dependsOn: app
        image:
          repository: ghcr.io/coder/code-server
          # yamllint disable-line rule:line-length
          tag: 4.104.2@sha256:6edc8e2d2849749c1a1a5eff8e76563b96db407e68899c143473a6004d0a6b5a
        args:
          - --auth=none
          - --disable-telemetry
          - --disable-update-check
          - --user-data-dir
          - /config/.code-server
          - --extensions-dir
          - /config/.code-server
          - --port
          - "12321"
          - /config
        securityContext:
          runAsUser: 0

service:
  app:
    forceRename: "{{.Release.Name}}"
    ports:
      http:
        port: &http-port 8080
  code-server:
    ports:
      http:
        port: &code-server-port 12321

persistence:
  data:
    type: persistentVolumeClaim
    storageClass: openebs-zfspv
    accessMode: ReadWriteOnce
    retain: true
    size: 1G
    globalMounts:
      - path: /data

rawResources:
  middleware:
    apiVersion: traefik.io/v1alpha1
    kind: Middleware
    spec:
      spec:
        stripPrefixRegex:
          regex:
            - "^/code/"

  ingress:
    enabled: true
    kind: IngressRoute
    apiVersion: traefik.io/v1alpha1
    annotations:
      kubernetes.io/ingress.class: traefik-external
    spec:
      spec:
        entryPoints:
          - websecure
        routes:
          - kind: Rule
            # yamllint disable-line rule:line-length
            match: Host(`{{.Release.Name}}.{{.Values.global.domain}}`) && PathPrefix(`/`)
            priority: 10
            services:
              - name: "{{.Release.Name}}"
                port: *http-port
          - kind: Rule
            # yamllint disable-line rule:line-length
            match: Host(`{{.Release.Name}}.{{.Values.global.domain}}`) && PathRegexp(`^/code/.*`)
            priority: 11
            services:
              - name: "{{.Release.Name}}-code-server"
                port: *code-server-port
            middlewares:
              - name: "{{.Release.Name}}-middleware"
        tls: {}
