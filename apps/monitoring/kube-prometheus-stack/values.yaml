---
env:
  TZ: Europe/London

prometheus-node-exporter:
  commonLabels:
    jobLabel: node-exporter

alertmanager:
  config:
    global:
      smtp_require_tls: false
    route:
      receiver: 'email-k8s-admin'
      routes:
      - receiver: 'null'
        matchers:
          - alertname =~ "InfoInhibitor|Watchdog"
      - receiver: 'email-k8s-admin'
    receivers:
    - name: 'null'
    - name: 'email-k8s-admin'
      email_configs:
      - to: gary@theclarkhome.com
        from: email-k8s-admin@theclarkhome.com
        smarthost: mail.default:587
  ingress:
    enabled: true
    ingressClass: traefik
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
    hosts:
      - "grafana.theclarkhome.com"
    tls:
      - hosts:
        - "*.theclarkhome.com"
        grafana:
  persistence:
    enabled: true
    type: pvc
    storageClassName: openebs-zfspv
    #persistentVolumeReclaimPolicy: Retain
    accessModes:
      - ReadWriteOnce
    size: 10Gi
    # annotations: {}
    finalizers:
      - kubernetes.io/pvc-protection
    # selectorLabels: {}
    # subPath: ""
    # existingClaim:
    # extraPvcLabels: {}

prometheus:
  prometheusSpec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    storageSpec: 
      volumeClaimTemplate:
        spec:
          storageClassName: openebs-zfspv
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi


defaultRules:
  rules:
    kubeProxy: false

resources:
  limits:
    cpu: 400m
    memory: 512Mi
  requests:
    cpu: 200m
    memory: 512Mi

kubeControllerManager:
  enabled: false
kubeScheduler:
  enabled: false
kubeProxy:
  enabled: false
#additionalPrometheusRules:
#  # TODO move to argocd
#- name: argocd
#  groups:
#  - name: argocdEmbeddedExporter
#
#    rules:
#      - alert: ArgocdServiceNotSynced
#        expr: 'argocd_app_info{sync_status!="Synced"} != 0'
#        for: 15m
#        labels:
#          severity: warning
#        annotations:
#          summary: ArgoCD service not synced (instance {{ $labels.instance }})
#          description: "Service {{ $labels.name }} run by argo is currently not in sync.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
#
#      - alert: ArgocdServiceUnhealthy
#        expr: 'argocd_app_info{health_status!="Healthy"} != 0'
#        for: 15m
#        labels:
#          severity: warning
#        annotations:
#          summary: ArgoCD service unhealthy (instance {{ $labels.instance }})
#          description: "Service {{ $labels.name }} run by argo is currently not healthy.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
