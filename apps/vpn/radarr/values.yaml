---
controllers:
  radarr:
    annotations:
      reloader.stakater.com/auto: "true"
    containers:
      app:
        image:
          repository: ghcr.io/home-operations/radarr
          tag: 6.0.2@sha256:12b8348c57c556d837d28bbc73a8837fb7f402a29aba40385a0513dbd068881b
        env:
          RADARR__APP__INSTANCENAME: "{{ .Release.Name }}"
          RADARR__APP__THEME: dark
          RADARR__AUTH__METHOD: External
          RADARR__AUTH__REQUIRED: DisabledForLocalAddresses
          RADARR__LOG__DBENABLED: "False"
          RADARR__LOG__LEVEL: info
          RADARR__SERVER__PORT: &port 7878
          RADARR__UPDATE__BRANCH: develop
          TZ: Europe/London
        envFrom:
          - secretRef:
              name: "{{ .Release.Name }}-api-key"
        probes:
          liveness: &probes
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /ping
                port: *port
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3
          readiness: *probes
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities: {drop: ["ALL"]}
        resources:
          requests:
            cpu: 100m
            memory: 272M
          limits:
            memory: 429M

defaultPodOptions:
  securityContext:
    runAsNonRoot: true
    runAsUser: 3001
    runAsGroup: 513
    fsGroup: 513
    fsGroupChangePolicy: OnRootMismatch

service:
  app:
    forceRename: "{{.Release.Name}}"
    ports:
      http:
        port: *port

ingress:
  app:
    enabled: true
    className: traefik
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
    hosts: &hosts
      - host: "{{.Release.Name}}.{{.Values.global.domain}}"
        paths:
          - path: /
            service:
              identifier: app
              port: http
    tls:
      - hosts:
          - "*.{{.Values.global.domain}}"
  external:
    enabled: true
    className: cloudflare-tunnel
    annotations:
      cloudflare-tunnel-ingress-controller.strrl.dev/backend-protocol: http
    hosts: *hosts

persistence:
  config:
    enabled: true
    forceRename: "{{ .Release.Name }}-config"
    retain: true
    storageClass: openebs-zfspv
    accessMode: ReadWriteOnce
    size: 2Gi
  config-cache:
    storageClass: openebs-zfspv
    accessMode: ReadWriteOnce
    size: 2Gi
    globalMounts:
      - path: /config/MediaCover
  data:
    enabled: true
    type: nfs
    server: 10.58.0.12
    path: /srv/media
    globalMounts:
      - path: /data
  tmp:
    type: emptyDir
