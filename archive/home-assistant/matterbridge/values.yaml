---
controllers:
  matterbridge:
    pod:
      annotations:
        reloader.stakater.com/auto: "true"
        k8s.v1.cni.cncf.io/networks: |
          [{
            "name":"macvlan-static",
            "namespace": "network",
            "ips": ["10.58.0.212"]
          }]

    containers:
      app:
        image:
          repository: docker.io/luligu/matterbridge
          tag: 2.2.1
        env:
          TZ: Europe/London
        resources:
          requests:
            cpu: 47m
            memory: 256M
          limits:
            memory: 256M

      code-server:
        image:
          repository: ghcr.io/coder/code-server
          tag: 4.97.2
        args:
          - --auth=none
          - --disable-telemetry
          - --disable-update-check
          - --user-data-dir=/root/.code-server
          - --extensions-dir=/root/.code-server
          - --port=12321
          - /root/.matterbridge
        resources:
          requests:
            cpu: 10m
          limits:
            memory: 1Gi

service:
  app:
    controller: matterbridge
    ports:
      http:
        port: &http 8283
      websec:
        port: &websec 433
      matter-tcp:
        enabled: true
        port: &matter-tcp 5540
        protocol: TCP
      matter-udp:
        port: &matter-udp 5540
        protocol: UDP
      code-server:
        port: &code-server 12321

persistence:
  storage:
    type: persistentVolumeClaim
    storageClass: openebs-zfspv
    accessMode: ReadWriteOnce
    retain: true
    size: 1G
    globalMounts:
      - path: /root
        subPath: Matterbridge
      - path: /root
        subPath: .matterbridge
      - path: /root
        subPath: .code-server

rawResources:
  ingress-tcp:
    enabled: true
    kind: IngressRouteTCP
    apiVersion: traefik.io/v1alpha1
    annotations:
      kubernetes.io/ingress.class: traefik-external
    spec:
      spec:
        entryPoints:
          - matter-tcp
        routes:
          - match: HostSNI(`*`)
            services:
              - name: "{{.Release.Name}}"
                port: *matter-tcp

  ingress-udp:
    enabled: true
    kind: IngressRouteUDP
    apiVersion: traefik.io/v1alpha1
    annotations:
      kubernetes.io/ingress.class: traefik-external
    spec:
      spec:
        entryPoints:
          - matter-udp
        routes:
          - services:
              - name: "{{.Release.Name}}"
                port: *matter-udp

  strip-code:
    apiVersion: traefik.io/v1alpha1
    kind: Middleware
    spec:
      spec:
        stripPrefixRegex:
          regex:
            - "^/code/"

  matterbridge-ws:
    apiVersion: traefik.io/v1alpha1
    kind: Middleware
    spec:
      spec:
        headers:
          customRequestHeaders:
            X-Forwarded-Proto: ws
          customResponseHeaders:
            X-Forwarded-Proto: ws

  websocket-ws:
    apiVersion: traefik.io/v1alpha1
    kind: Middleware
    spec:
      spec:
        headers:
          customRequestHeaders:
            Upgrade: websocket
            Connection: Upgrade
            X-Forwarded-Proto: https,wss

  
  ingress:
    enabled: true
    kind: IngressRoute
    apiVersion: traefik.io/v1alpha1
    annotations:
      kubernetes.io/ingress.class: traefik-external
    spec:
      spec:
        entryPoints:
          - websecure
        routes:
          - kind: Rule
            match: |
              Host(`{{.Release.Name}}.{{.Values.global.domain}}`) &&
              PathPrefix(`/`)
            priority: 10
            services:
              - name: matterbridge
                port: *http
          - kind: Rule
            match: |
              Host(`{{.Release.Name}}.{{.Values.global.domain}}`) &&
              PathRegexp(`^/code/.*`)
            priority: 11
            services:
              - name: matterbridge
                port: *code-server
            middlewares:
              - name: "{{.Release.Name}}-strip-code"
        tls: {}
