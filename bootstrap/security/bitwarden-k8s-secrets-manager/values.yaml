---
# See gotmpl for namepsace settings

# Configuration to setup sync
configs:
  default:
    syncInterval: 60
    accessTokenSecret:
      name: bitwarden-access-token

    secrets:
      - name: argocd-initial-admin-secret
        namespace: argocd
        data:
          password:
            secret: argocd_admin_password
        labels:
          app.kubernetes.io/part-of:
            value: argo-cd

      - name: argocd-secret
        namespace: argocd
        data:
          server.secretkey:
            secret: argocd_secret
            key: server-secretkey
          admin.password:
            secret: argocd_secret
            key: admin-password
          admin.passwordMtime:
            secret: argocd_secret
            key: admin-passwordMtime
        labels:
          app.kubernetes.io/part-of:
            value: argo-cd

      - name: cloudcasa-clusterid
        namespace: cloudcasa-io
        data:
          cluster_id:
            secret: cloudcasa_clusterid
        labels:
          app:
            value: cloudcasa-kubeagent-manager

      - name: cloudflare-token-secret
        namespace: security
        data:
          tunnelToken:
            secret: cloudflare_api_token
        labels:
          app.kubernetes.io/name:
            value: cert-manager

      # - name: cloudflare-tunnel-remote
      #   namespace: kube-system
      #   data:
      #     tunnelToken:
      #       secret: cloudflare_tunnel_remote
      #   labels:
      #     pod:
      #       value: cloudflared

      - name: cluster1-tunnel-credentials
        namespace: network
        data:
          credentials.json:
            secret: cluster1_tunnel_credentials
        labels:
          app.kubernetes.io/name:
            value: cloudflare-tunnel-remote

      - name: esphome-secret
        namespace: home-assistant
        data:
          secrets.yaml:
            nested:
              mqtt_user:
                secret: mqtt_credentials
                key: MQTT_USER
              mqtt_password:
                secret: mqtt_credentials
                key: MQTT_PASSWORD
              wifi_ssid:
                secret: wifi_credentials
                key: wifi_ssid
              wifi_password:
                secret: wifi_credentials
                key: wifi_password
              octopus_account:
                secret: octopus_credentials
                key: octopus_account
              octopus_api_key:
                secret: octopus_credentials
                key: octopus_api_key
        labels:
          app.kubernetes.io/name:
            value: esphome

      - name: gluetun-auth
        namespace: network
        data:
          config.toml:
            secret: gluetun_auth
        labels:
          app.kubernetes.io/name:
            value: pod-gatway

      - name: grafana-admin
        namespace: monitoring
        data:
          admin-user:
            secret: grafana_admin
            key: admin-user
          admin-password:
            secret: grafana_admin
            key: admin-password
        labels:
          app.kubernetes.io/name:
            value: grafana

      - name: home-assistant-matter-hub-secret
        namespace: home-assistant
        data:
          HAMH_HOME_ASSISTANT_URL:
            secret: matter_ha_access_token
            key: HOME_ASSISTANT_URL
          HAMH_HOME_ASSISTANT_ACCESS_TOKEN:
            secret: matter_ha_access_token
            key: HOME_ASSISTANT_ACCESS_TOKEN
        labels:
          app.kubernetes.io/name:
            value: matterhub

      - name: home-assistant-prometheus
        namespace: home-assistant
        data:
          token:
            secret: ha_api_token
        labels:
          app.kubernetes.io/name:
            value: home-assistant

      - name: idrivee2-s3
        namespace: velero
        data:
          ACCESS_KEY_ID:
            secret: idrivee2_s3
            key: ACCESS_KEY_ID
          ENDPOINT:
            secret: idrivee2_s3
            key: ENDPOINT
          SECRET_ACCESS_KEY:
            secret: idrivee2_s3
            key: SECRET_ACCESS_KEY
        labels:
          app.kubernetes.io/name:
            value: velero

      - name: idrivee2-s3-credentials
        namespace: velero
        data:
          cloud:
            secret: idrivee2_s3_credentials
        labels:
          app.kubernetes.io/name:
            value: velero

      - name: minio-s3
        namespace: velero
        data:
          ACCESS_KEY_ID:
            secret: minio_s3
            key: ACCESS_KEY_ID
          ENDPOINT:
            secret: minio_s3
            key: ENDPOINT
          SECRET_ACCESS_KEY:
            secret: minio_s3
            key: SECRET_ACCESS_KEY
        labels:
          app.kubernetes.io/name:
            value: velero

      - name: minio-s3-credentials
        namespace: velero
        data:
          cloud:
            secret: minio_s3_credentials
        labels:
          app.kubernetes.io/name:
            value: velero

      - name: mqtt-credentials
        namespace: home-assistant
        data:
          MQTT_USER:
            secret: mqtt_credentials
            key: MQTT_USER
          MQTT_PASSWORD:
            secret: mqtt_credentials
            key: MQTT_PASSWORD
        labels:
          app.kubernetes.io/name:
            value: mosquitto

      - name: postfix-mail
        namespace: default
        data:
          RELAYHOST:
            secret: postfix_mail
            key: RELAYHOST
          RELAYHOST_PASSWORD:
            secret: postfix_mail
            key: RELAYHOST_PASSWORD
          RELAYHOST_USERNAME:
            secret: postfix_mail
            key: RELAYHOST_USERNAME
        labels:
          app.kubernetes.io/name:
            value: mail

      - name: privatevpn-ovn
        namespace: network
        data:
          OPENVPN_USER:
            secret: privatevpn_ovn
            key: OPENVPN_USER
          OPENVPN_PASSWORD:
            secret: privatevpn_ovn
            key: OPENVPN_PASSWORD
        labels:
          app.kubernetes.io/name:
            value: pod-gateway

      - name: privatevpn-ovn-conf
        namespace: network
        data:
          vpnConfigfile:
            secret: privatevpn_ovn_conf
        labels:
          app.kubernetes.io/name:
            value: pod-gateway

      - name: privatevpn-wg
        namespace: network
        data:
          WIREGUARD_PRIVATE_KEY:
            secret: privatevpn_wg
            key: WIREGUARD_PRIVATE_KEY
          WIREGUARD_ADDRESSES:
            secret: privatevpn_wg
            key: WIREGUARD_ADDRESSES
          WIREGUARD_DNS:
            secret: privatevpn_wg
            key: WIREGUARD_DNS
          WIREGUARD_PUBLIC_KEY:
            secret: privatevpn_wg
            key: WIREGUARD_PUBLIC_KEY
          WIREGUARD_ENDPOINT_IP:
            secret: privatevpn_wg
            key: WIREGUARD_ENDPOINT_IP
          WIREGUARD_ENDPOINT_PORT:
            secret: privatevpn_wg
            key: WIREGUARD_ENDPOINT_PORT
        #  WIREGUARD_ALLOWED_IPS:
        #    secret: privatevpn_wg
        #    key: WIREGUARD_ALLOWED_IPS
        labels:
          app.kubernetes.io/name:
            value: pod-gateway

      - name: traefik-dashboard-auth
        namespace: network
        data:
          users:
            secret: traefik_dashboard_auth
        labels:
          app.kubernetes.io/name:
            value: traefik


deploy: true

image:
  repository: quay.io/rhpds/bitwarden-k8s-secrets-manager
  pullPolicy: IfNotPresent
  tagOverride: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}

resources:
  requests:
    cpu: 15m
    memory: 138M
  limits:
    # cpu: 254m
    memory: 3742M
