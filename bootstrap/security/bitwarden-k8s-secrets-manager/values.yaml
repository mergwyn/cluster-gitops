---
# See gotmpl for namepsace settings

# Configuration to setup sync
configs:
  default:
    syncInterval: 60
    accessTokenSecret:
      name: bitwarden-access-token

    secrets:
      - name: argocd-admin-password
        namespace: argocd
        data:
          admin.password:
            secret: argocd_admin_password
        labels:
          app.kubernetes.io/part-of:
            value: argo-cd

      - name: cloudcasa-clusterid
        namespace: cloudcasa-io
        data:
          cluster_id:
            secret: cloudcasa_clusterid
        labels:
          app:
            value: cloudcasa-kubeagent-manager

      - name: cloudflare-token-secret
        namespace: security
        data:
          cloudflare-token:
            secret: cloudflare_api_token
        labels:
          app.kubernetes.io/name:
            value: cert-manager

#      - name: cloudflare-tunnel-remote
#        namespace: kube-system 
#        data:
#          tunnelToken:
#            secret: cloudflare_tunnel_remote 
#        labels:
#          pod:
#            value: cloudflared

      - name: grafana-admin
        namespace: monitoring
        data:
          admin-user:
            secret: grafana_admin
            key: admin-user
          admin-password:
            secret: grafana_admin
            key: admin-password
        labels:
          app.kubernetes.io/name:
            value: grafana

# TODO confirm if this is used
      - name: idrivee2-s3
        namespace: backup
        data:
          ACCESS_KEY_ID:
            secret: idrivee2_s3
            key: ACCESS_KEY_ID
          ENDPOINT:
            secret: idrivee2_s3
            key: ENDPOINT
          SECRET_ACCESS_KEY:
            secret: idrivee2_s3
            key: SECRET_ACCESS_KEY
        labels:
          app.kubernetes.io/name:
            value: velero

      - name: idrivee2-s3-credentials
        namespace: backup
        data:
          cloud:
            secret: idrivee2_s3_credentials
        labels:
          app.kubernetes.io/name:
            value: velero

# TODO confirm if this is used
      - name: minio-s3
        namespace: backup
        data:
          ACCESS_KEY_ID:
            secret: minio_s3
            key: ACCESS_KEY_ID
          ENDPOINT:
            secret: minio_s3
            key: ENDPOINT
          SECRET_ACCESS_KEY:
            secret: minio_s3
            key: SECRET_ACCESS_KEY
        labels:
          app.kubernetes.io/name:
            value: velero

      - name: minio-s3-credentials
        namespace: backup
        data:
          cloud:
            secret: minio_s3_credentials
        labels:
          app.kubernetes.io/name:
            value: velero

      - name: privatevpn-ovn
        namespace: network
        data:
          OPENVPN_USER:
            secret: privatevpn_ovn
            key: OPENVPN_USER
          OPENVPN_PASSWORD:
            secret: privatevpn_ovn
            key: OPENVPN_PASSWORD
          SERVER_CITIES:
            secret: privatevpn_ovn
            key: SERVER_CITIES
          DNS_ADDRESS:
            secret: privatevpn_ovn
            key: DNS_ADDRESS
        labels:
          app.kubernetes.io/name:
            value: pod-gateway

      - name: privatevpn
        namespace: network
        data:
          OPENVPN_USER:
            secret: privatevpn_ovn
            key: OPENVPN_USER
          OPENVPN_PASSWORD:
            secret: privatevpn_ovn
            key: OPENVPN_PASSWORD
          SERVER_CITIES:
            secret: privatevpn_ovn
            key: SERVER_CITIES
          DNS_ADDRESS:
            secret: privatevpn_ovn
            key: DNS_ADDRESS
        labels:
          app.kubernetes.io/name:
            value: pod-gateway

      - name: privatevpn-wg
        namespace: network
        data:
          WIREGUARD_PRIVATE_KEY:
            secret: privatevpn_wg
            key: WIREGUARD_PRIVATE_KEY
          WIREGUARD_ADDRESSES:
            secret: privatevpn_wg
            key: WIREGUARD_ADDRESSES
          WIREGUARDS_DNS:
            secret: privatevpn_wg
            key: WIREGUARDS_DNS
          WIREGUARD_PUBLIC_KEY:
            secret: privatevpn_wg
            key: WIREGUARD_PUBLIC_KEY
          WIREGUARD_ENDPOINT_IP:
            secret: privatevpn_wg
            key: WIREGUARD_ENDPOINT_IP
          WIREGUARD_ENDPOINT_PORT:
            secret: privatevpn_wg
            key: WIREGUARD_ENDPOINT_PORT
#          WIREGUARD_ALLOWED_IPS:
#            secret: privatevpn_wg
#            key: WIREGUARD_ALLOWED_IPS
        labels:
          app.kubernetes.io/name:
            value: pod-gateway

      - name: traefik-dashboard-auth
        namespace: network
        data:
          users:
            secret: traefik_dashboard_auth
        labels:
          app.kubernetes.io/name:
            value: traefik


deploy: true

image:
  repository: quay.io/rhpds/bitwarden-k8s-secrets-manager
  pullPolicy: IfNotPresent
  tagOverride: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

resources:
  requests:
    cpu: 15m
    memory: 106M
  limits:
    cpu: 254m
    memory: 545M
