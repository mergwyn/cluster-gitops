env:
  TZ: Europe/London

configs:
  params:
    server.insecure: true
  cm:
    kustomize.buildOptions: --enable-helm

env:
  ADMIN_PASSWORD:
    secretKeyRef:
      name: argocd-admin-password
      key: admin.password
 
secret:
  argocdServerAdminPassword: ${ADMIN_PASSWORD}

#repoServer:
#  extraContainers:
#    - name: cmp-helmfile
#      securityContext:
#        runAsNonRoot: true
#        runAsUser: 999
#      image: ghcr.io/helmfile/helmfile:v0.157.0
#      imagePullPolicy: IfNotPresent
#      # Entrypoint should be Argo CD lightweight CMP server i.e. argocd-cmp-server
#      command: [/var/run/argocd/argocd-cmp-server]
#      volumeMounts:
#        - mountPath: /var/run/argocd
#          name: var-files
#        - mountPath: /home/argocd/cmp-server/plugins
#          name: plugins
#        - mountPath: /home/argocd/cmp-server/config/plugin.yaml
#          subPath: plugin.yaml
#          name: argocd-cmp-cm
#        - mountPath: /tmp
#          name: cmp-tmp
#  volumes:
#    - name: argocd-cmp-cm
#      configMap:
#        name: argocd-cmp-cm
#    - emptyDir: {}
#      name: cmp-tmp



configs:
  cm:
    create: true
# Enable inter-app sync wave
    resource.customizations.health.argoproj.io_Application: |
      hs = {}
      hs.status = "Progressing"
      hs.message = ""
      if obj.status ~= nil then
        if obj.status.health ~= nil then
          hs.status = obj.status.health.status
          if obj.status.health.message ~= nil then
            hs.message = obj.status.health.message
          end
        end
      end
      return hs
  cmp:
    create: true
    plugins:
      cmp-helmfile: # helmfile plugin support
        version: v1.0
        init:
          command: [sh, -c, 'echo "Initializing..."']
        generate:
          command: [sh, -c]
          args: ["helmfile template --quiet --namespace $ARGOCD_APP_NAMESPACE"]
        discover:
          fileName: "helmfile.yaml"

extraObjects:
  - kind: IngressRoute
    apiVersion: traefik.containo.us/v1alpha1
    metadata:
      name: argocd-server
      namespace: argocd
      annotations:
        kubernetes.io/ingress.class: traefik-external
    spec:
      entryPoints:
        - websecure
      routes:
        - kind: Rule
          match: Host(`argocd.theclarkhome.com`)
          priority: 10
          services:
            - name: argo-cd-argocd-server
              port: 80
        - kind: Rule
          match: Host(`argocd.theclarkhome.com`) && Headers(`Content-Type`, `application/grpc`)
          priority: 11
          services:
            - name: argo-cd-argocd-server
              port: 80
              scheme: h2c
      tls: {}

