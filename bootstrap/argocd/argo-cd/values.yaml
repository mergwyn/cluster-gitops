env:
  TZ: Europe/London

env:
  ADMIN_PASSWORD:
    secretKeyRef:
      name: argocd-admin-password
      key: admin.password
 
secret:
  argocdServerAdminPassword: ${ADMIN_PASSWORD}

configs:
  params:
    # -- Run server without TLS
    ## NOTE: This value should be set when you generate params by other means as it changes ports used by ingress template.
    server.insecure: true
    # -- Enables use of the Progressive Syncs capability
    applicationsetcontroller.enable.progressive.syncs: true

  cm:
    kustomize.buildOptions: --enable-helm
    create: true
    # Enable inter-app sync wave
    resource.customizations.health.argoproj.io_Application: |
      hs = {}
      hs.status = "Progressing"
      hs.message = ""
      if obj.status ~= nil then
        if obj.status.health ~= nil then
          hs.status = obj.status.health.status
          if obj.status.health.message ~= nil then
            hs.message = obj.status.health.message
          end
        end
      end
      return hs
  cmp:
    create: true
    plugins:
      helmfile: # helmfile plugin support
        version: v1.0
        init:
          command: [sh, -c, 'echo "Initializing..."']
        generate:
          command:
            - bash
            - "-c"
            - |
              if [[ -v ENV_NAME ]]; then
                helmfile -n "$ARGOCD_APP_NAMESPACE" -e $ENV_NAME template --include-crds -q
              elif [[ -v ARGOCD_ENV_ENV_NAME ]]; then
                helmfile -n "$ARGOCD_APP_NAMESPACE" -e "$ARGOCD_ENV_ENV_NAME" template --include-crds -q
              else
                helmfile -n "$ARGOCD_APP_NAMESPACE" template --include-crds -q
              fi
        discover:
          fileName: "helmfile.yaml"

repoServer:
  extraContainers:
    - name: helmfile
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      image: ghcr.io/helmfile/helmfile:v0.168.0
      imagePullPolicy: IfNotPresent
      # Entrypoint should be Argo CD lightweight CMP server i.e. argocd-cmp-server
      command: [/var/run/argocd/argocd-cmp-server]
      env:
        - name: HELM_CACHE_HOME
          value: /tmp/helm/cache
        - name: HELM_CONFIG_HOME
          value: /tmp/helm/config
        - name: HELMFILE_CACHE_HOME
          value: /tmp/helmfile/cache
        - name: HELMFILE_TEMPDIR
          value: /tmp/helmfile/tmp
      volumeMounts:
        - mountPath: /var/run/argocd
          name: var-files
        - mountPath: /home/argocd/cmp-server/plugins
          name: plugins
        - mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: helmfile.yaml
          name: argocd-cmp-cm
        - mountPath: /tmp
          name: cmp-tmp
  volumes:
    - name: argocd-cmp-cm
      configMap:
        name: argocd-cmp-cm
    - emptyDir: {}
      name: cmp-tmp

extraObjects:
  - kind: IngressRoute
    apiVersion: traefik.io/v1alpha1
    metadata:
      name: argocd-server
      namespace: argocd
      annotations:
        kubernetes.io/ingress.class: traefik-external
    spec:
      entryPoints:
        - websecure
      routes:
        - kind: Rule
          match: Host(`argocd.theclarkhome.com`)
          priority: 10
          services:
            - name: argo-cd-argocd-server
              port: 80
        - kind: Rule
          match: Host(`argocd.theclarkhome.com`) && Headers(`Content-Type`, `application/grpc`)
          priority: 11
          services:
            - name: argo-cd-argocd-server
              port: 80
              scheme: h2c
      tls: {}
  - kind: VerticalPodAutoscaler
    apiVersion: autoscaling.k8s.io/v1
    metadata:
      namespace: argocd
      name: argocd-application-controller-vpa
    spec:
      targetRef:
        apiVersion: "apps/v1"
        kind:       StatefulSet
        name:       argo-cd-argocd-application-controller
      updatePolicy:
        updateMode: "Auto"
