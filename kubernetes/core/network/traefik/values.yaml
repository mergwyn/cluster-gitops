---
globalArguments:
  - "--global.sendanonymoususage=false"
  - "--global.checknewversion=false"

# global:
#   sendanonymoususage: false
#   checknewversion: false

additionalArguments:
  - "--serversTransport.insecureSkipVerify=true"
  - "--log.level=INFO"
  - "--metrics.prometheus=true"

deployment:
  enabled: true
  replicas: 2
  annotations:
    secret.reloader.stakater.com/reload: "auto"
  podAnnotations: {}
  additionalContainers: []
  initContainers: []

ports:
  web:
    redirections:
      entryPoint:
        to: websecure
        scheme: https
        permanent: true
  websecure:
    tls:
      enabled: true
  mqtt:
    port: 1883
    expose:
      default: true
    exposedPort: 1883
    protocol: TCP
  mqtts:
    port: 8883
    protocol: TCP
    expose:
      default: true
    exposedPort: 8883
  # matter-tcp:
  #   port: 5540
  #   expose:
  #     default: true
  #   exposedPort: 5540
  #   protocol: TCP
  # matter-udp:
  #   port: 5540
  #   expose:
  #     default: true
  #   exposedPort: 5540
  #   protocol: UDP

providers:
  kubernetesCRD:
    enabled: true
    ingressClass: traefik-external
    allowExternalNameServices: true
  kubernetesIngress:
    enabled: true
    allowExternalNameServices: true
    publishedService:
      enabled: true

rbac:
  enabled: true

service:
  enabled: true
  type: LoadBalancer
  annotations: {}
  labels: {}
  # spec:
  # loadBalancerIP: 10.58.0.32
  loadBalancerSourceRanges: []
  externalIPs: []

resources:
  requests:
    cpu: 15m
    memory: 127M
  limits:
    # cpu: 21m
    memory: 249M

metrics:
  prometheus:
    service:
      enabled: true
    disableAPICheck: false
    serviceMonitor:
      enabled: true
      metricRelabelings:
        - sourceLabels: [__name__]
          separator: ;
          regex: ^fluentd_output_status_buffer_(oldest|newest)_.+
          replacement: $1
          action: drop
      relabelings:
        - sourceLabels: [__meta_kubernetes_pod_node_name]
          separator: ;
          regex: ^(.*)$
          targetLabel: nodename
          replacement: $1
          action: replace
      jobLabel: traefik
      interval: 30s
      honorLabels: true
    prometheusRule:
      enabled: true
      additionalLabels:
        release: kube-prometheus-stack
      rules:
        - alert: TraefikDown
          expr: up{job="traefik"} == 0
          for: 5m
          labels:
            context: traefik
            severity: warning
          annotations:
            summary: "Traefik Down"
            description: "{{ $labels.pod }} on {{ $labels.nodename }} is down"

ingressRoute:
  dashboard:
    enabled: true
    matchRule: Host(`traefik.theclarkhome.com`) && (PathPrefix(`/dashboard`) || PathPrefix(`/api`))
    entryPoints:
      - websecure
    middlewares:
      - name: traefik-dashboard-basicauth
        #namespace: "{{.Release.Namespace}}"
    tls: {}


extraObjects:
  - apiVersion: traefik.io/v1alpha1
    kind: Middleware
    metadata:
      name: traefik-dashboard-basicauth
      labels:
        app.kubernetes.io/name: "{{.Release.Name}}"
        app.kubernetes.io/instance: "{{.Release.Name}}-{{.Release.Namespace}}"
    spec:
      basicAuth:
        secret: traefik-dashboard-auth

  - apiVersion: traefik.io/v1alpha1
    kind: TLSStore
    metadata:
      name: default
      namespace: kube-system
      labels:
        app.kubernetes.io/name: "{{.Release.Name}}"
        app.kubernetes.io/instance: "{{.Release.Name}}-{{.Release.Namespace}}"
    spec:
      defaultCertificate:
        secretName: theclarkhome-com-tls

  - apiVersion: external-secrets.io/v1
    kind: ExternalSecret
    metadata:
      name: &secret traefik-dashboard-auth
      labels:
        app.kubernetes.io/name: "{{.Release.Name}}"
        app.kubernetes.io/instance: "{{.Release.Name}}-{{.Release.Namespace}}"
    spec:
      refreshInterval: 15m
      secretStoreRef:
        kind: ClusterSecretStore
        name: bitwarden
      target:
        name: *secret
        creationPolicy: Owner
        template:
          data:
            users: '{"admin":"{{`{{.admin}}`}}"}'
      dataFrom:
        - extract:
            key: traefik_dashboard_auth
